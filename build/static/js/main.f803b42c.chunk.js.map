{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","withRouter","props","useState","adjectives","getFunName","input","setInput","className","type","placeholder","defaultValue","onChange","evt","target","value","onClick","e","preventDefault","history","push","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","CSSTransition","TransitionGroup","component","name","price","removeFromOrder","orderIds","Object","keys","this","total","reduce","prevTotal","map","React","Component","AddFishForm","nameRef","createRef","priceRef","statusRef","descRef","imageRef","createFish","event","current","parseFloat","desc","image","addFish","currentTarget","reset","onSubmit","ref","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","deleteFish","Login","authenticate","require","config","firebaseApp","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","aignOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","exact","path","StorePicker","render","document","querySelector"],"mappings":"4KAAO,SAASA,EAAYC,GAC1B,OAAQA,EAAQ,KAAKC,eAAe,QAAS,CAC3CC,MAAO,WACPC,SAAU,QAIP,SAASC,EAAMC,GACpB,OAAOA,EAAIC,KAAKC,MAAMD,KAAKE,SAAWH,EAAII,S,WCkB7BC,mBApBf,SAAqBC,GAEjB,MAA0BC,mBDcvB,WACL,IAAMC,EAAa,CACjB,WACA,YACA,QACA,OACA,UACA,QACA,YACA,WACA,OACA,cACA,gBACA,QACA,SACA,YACA,UACA,YACA,QACA,aACA,SACA,WACA,cACA,SACA,SACA,WACA,QACA,UACA,OACA,aACA,UACA,YACA,UACA,YACA,QACA,cACA,UACA,WAoCF,MAAM,GAAN,OAAUT,EAAMS,GAAhB,YAA+BT,EAAMS,GAArC,YAAoDT,EAjCtC,CACZ,QACA,MACA,WACA,QACA,OACA,SACA,SACA,OACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,WACA,WACA,QACA,OACA,QACA,SACA,aACA,WACA,YACA,QACA,SACA,SACA,YACA,WACA,UCpFmCU,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,OACI,uBAAMC,UAAU,iBAAhB,UACI,sDACA,uBAAOC,KAAK,OAAOC,YAAY,aAAaC,aAAcL,EAAOM,SAAU,SAACC,GAAD,OAASN,EAASM,EAAIC,OAAOC,UACxG,wBAAQN,KAAK,SAASO,QAAS,SAACC,GAC5BA,EAAEC,iBACFhB,EAAMiB,QAAQC,KAAd,iBAA6Bd,KAFjC,+B,wCCXG,SAASe,EAAOnB,GAC3B,OACI,yBAAQM,UAAU,MAAlB,UACI,uCAEI,uBAAMA,UAAU,QAAhB,UACI,sBAAMA,UAAU,KAAhB,gBACA,sBAAMA,UAAU,MAAhB,oBAJR,SAQA,oBAAIA,UAAU,UAAd,SACI,+BAAON,EAAMoB,e,oBCVvBC,E,4MAMJC,YAAc,SAAAC,GACZ,IAAMC,EAAO,EAAKxB,MAAMyB,OAAOF,GACzBG,EAAQ,EAAK1B,MAAM2B,MAAMJ,GACzBK,EAAcJ,GAAwB,cAAhBA,EAAKK,OAC3BC,EAAoB,CACxBC,WAAY,QACZR,MACAS,QAAS,CAAEC,MAAO,IAAKC,KAAM,MAG/B,OAAKV,EAEAI,EAUH,cAACO,EAAA,EAAD,2BAAmBL,GAAnB,aACE,6BACE,iCACE,cAACM,EAAA,EAAD,CAAiBC,UAAU,OAAO/B,UAAU,QAA5C,SACE,cAAC6B,EAAA,EAAD,CACEJ,WAAW,QAEXC,QAAS,CAAEC,MAAO,IAAKC,KAAM,KAH/B,SAKE,+BAAOR,KAHFA,KAJX,OAUOF,EAAKc,KACTlD,EAAYsC,EAAQF,EAAKe,OAC1B,wBAAQzB,QAAS,kBAAM,EAAKd,MAAMwC,gBAAgBjB,IAAlD,sBAbKA,MATT,cAACY,EAAA,EAAD,2BAAmBL,GAAnB,aACE,wCACSN,EAAOA,EAAKc,KAAO,OAD5B,4BAASf,MALG,M,4CAkCpB,WAAU,IAAD,OACDkB,EAAWC,OAAOC,KAAKC,KAAK5C,MAAM2B,OAClCkB,EAAQJ,EAASK,QAAO,SAACC,EAAWxB,GACxC,IAAMC,EAAO,EAAKxB,MAAMyB,OAAOF,GACzBG,EAAQ,EAAK1B,MAAM2B,MAAMJ,GAE/B,OADoBC,GAAwB,cAAhBA,EAAKK,OAExBkB,EAAYrB,EAAQF,EAAKe,MAE3BQ,IACN,GACH,OACE,sBAAKzC,UAAU,aAAf,UACE,uCACA,cAAC8B,EAAA,EAAD,CAAiBC,UAAU,KAAK/B,UAAU,QAA1C,SACGmC,EAASO,IAAIJ,KAAKtB,eAErB,sBAAKhB,UAAU,QAAf,mBAEE,iCAASlB,EAAYyD,e,GArEXI,IAAMC,WA4EX7B,I,iCC9ET8B,E,4MACJC,QAAUH,IAAMI,Y,EAChBC,SAAWL,IAAMI,Y,EACjBE,UAAYN,IAAMI,Y,EAClBG,QAAUP,IAAMI,Y,EAChBI,SAAWR,IAAMI,Y,EAMjBK,WAAa,SAAAC,GAEXA,EAAM3C,iBACN,IAAMQ,EAAO,CACXc,KAAM,EAAKc,QAAQQ,QAAQ/C,MAC3B0B,MAAOsB,WAAW,EAAKP,SAASM,QAAQ/C,OACxCgB,OAAQ,EAAK0B,UAAUK,QAAQ/C,MAC/BiD,KAAM,EAAKN,QAAQI,QAAQ/C,MAC3BkD,MAAO,EAAKN,SAASG,QAAQ/C,OAE/B,EAAKb,MAAMgE,QAAQxC,GAEnBmC,EAAMM,cAAcC,S,4CAEtB,WACE,OACE,uBAAM5D,UAAU,YAAY6D,SAAUvB,KAAKc,WAA3C,UACE,uBAAOpB,KAAK,OAAO8B,IAAKxB,KAAKQ,QAAS7C,KAAK,OAAOC,YAAY,SAC9D,uBACE8B,KAAK,QACL8B,IAAKxB,KAAKU,SACV/C,KAAK,OACLC,YAAY,UAEd,yBAAQ8B,KAAK,SAAS8B,IAAKxB,KAAKW,UAAhC,UACE,wBAAQ1C,MAAM,YAAd,oBACA,wBAAQA,MAAM,cAAd,0BAGF,0BAAUyB,KAAK,OAAO8B,IAAKxB,KAAKY,QAAShD,YAAY,SACrD,uBACE8B,KAAK,QACL8B,IAAKxB,KAAKa,SACVlD,KAAK,OACLC,YAAY,UAEd,wBAAQD,KAAK,SAAb,+B,GA/CkB0C,IAAMC,WAqDjBC,ICrDTkB,E,4MAaJC,aAAe,SAAAX,GACbY,QAAQC,IAAIb,EAAMM,cAAcpD,OAGhC,IAAM4D,EAAW,2BACZ,EAAKzE,MAAMwB,MADC,IAEf,CAACmC,EAAMM,cAAc3B,MAAOqB,EAAMM,cAAcpD,QAElD,EAAKb,MAAM0E,WAAW,EAAK1E,MAAM2E,MAAOF,I,4CAG1C,WAAU,IAAD,OACP,OACE,sBAAKnE,UAAU,YAAf,UACE,uBACEC,KAAK,OACL+B,KAAK,OACL5B,SAAUkC,KAAK0B,aACfzD,MAAO+B,KAAK5C,MAAMwB,KAAKc,OAEzB,uBACE/B,KAAK,OACL+B,KAAK,QACL5B,SAAUkC,KAAK0B,aACfzD,MAAO+B,KAAK5C,MAAMwB,KAAKe,QAEzB,yBACEhC,KAAK,OACL+B,KAAK,SACL5B,SAAUkC,KAAK0B,aACfzD,MAAO+B,KAAK5C,MAAMwB,KAAKK,OAJzB,UAME,wBAAQhB,MAAM,YAAd,oBACA,wBAAQA,MAAM,cAAd,0BAEF,0BACEyB,KAAK,OACL5B,SAAUkC,KAAK0B,aACfzD,MAAO+B,KAAK5C,MAAMwB,KAAKsC,OAEzB,uBACEvD,KAAK,OACL+B,KAAK,QACL5B,SAAUkC,KAAK0B,aACfzD,MAAO+B,KAAK5C,MAAMwB,KAAKuC,QAEzB,wBAAQjD,QAAS,kBAAM,EAAKd,MAAM4E,WAAW,EAAK5E,MAAM2E,QAAxD,gC,GA3DmB1B,IAAMC,WAiElBmB,IC/CAQ,EAlBD,SAAC7E,GAAD,OACV,sBAAKM,UAAU,QAAf,UACI,iDACA,0EACA,wBAAQA,UAAU,SAASQ,QAAS,kBAAMd,EAAM8E,aAAa,WAA7D,gCAGA,wBAAQxE,UAAU,WAAWQ,QAAS,kBAAMd,EAAM8E,aAAa,aAA/D,sC,yBCRRC,EAAQ,IAAUC,SAElB,IAAMC,EAAcC,IAASC,cAAc,CACvCC,OAAQC,0CACRC,WAAY,0CACZC,YAAa,8DACbC,UAAW,0BACXC,cAAe,sCACfC,kBAAmB,cACnBC,MAAO,6CASMC,EANFC,IAAOC,YAAYb,EAAYc,YCNxCC,E,4MASFC,MAAQ,CACJC,IAAK,KACLC,MAAO,M,EAYXC,Y,uCAAc,WAAOC,GAAP,eAAAC,EAAA,sEAEUV,EAAKW,MAAM,EAAKvG,MAAMwG,QAAS,CAAEC,QAAQ,iBAFnD,WAEJC,EAFI,QAICP,MAJD,gCAMAP,EAAKe,KAAL,UAAa,EAAK3G,MAAMwG,QAAxB,UAAyC,CAC3CI,KAAMP,EAASQ,KAAKX,MAPlB,OAWV,EAAKY,SAAS,CACVZ,IAAKG,EAASQ,KAAKX,IACnBC,MAAOO,EAAMP,OAASE,EAASQ,KAAKX,MAb9B,2C,wDAiBdpB,aAAe,SAAAiC,GACX,IAAMC,EAAe,IAAI9B,IAAS+B,KAAT,UAAiBF,EAAjB,kBACzB9B,EACKgC,OACAC,gBAAgBF,GAChBG,KAAK,EAAKf,c,EAGnBgB,O,sBAAS,sBAAAd,EAAA,6DACL/B,QAAQC,IAAI,gBADP,SAECU,IAAS+B,OAAOI,UAFjB,OAGL,EAAKP,SAAS,CAAEZ,IAAK,OAHhB,2C,uDAlCP,WAAqB,IAAD,OAElBhB,IAAS+B,OAAOK,oBAAmB,SAAAT,GAC5BA,GACC,EAAKT,YAAY,CAAES,c,oBAoCjC,WAAU,IAAD,OACDO,EAAS,wBAAQtG,QAAS8B,KAAKwE,OAAtB,sBAEf,OAAKxE,KAAKqD,MAAMC,IAIZtD,KAAKqD,MAAMC,MAAQtD,KAAKqD,MAAME,MAE1B,gCACI,6DACCiB,KAOX,sBAAK9G,UAAU,YAAf,UACE,2CACC8G,EACA1E,OAAOC,KAAKC,KAAK5C,MAAMyB,QAAQuB,KAAI,SAAAzB,GAAG,OACrC,cAAC,EAAD,CAEEoD,MAAOpD,EACPC,KAAM,EAAKxB,MAAMyB,OAAOF,GACxBmD,WAAY,EAAK1E,MAAM0E,WACvBE,WAAY,EAAK5E,MAAM4E,YAJlBrD,MAOT,cAAC,EAAD,CAAayC,QAASpB,KAAK5C,MAAMgE,UACjC,wBAAQlD,QAAS8B,KAAK5C,MAAMuH,iBAA5B,mCA3BO,cAAC,EAAD,CAAOzC,aAAclC,KAAKkC,mB,GA1DjB7B,IAAMC,WA6Ff8C,IClBAvE,EAlFA,CACb+F,MAAO,CACLlF,KAAM,kBACNyB,MAAO,mBACPD,KACE,wFACFvB,MAAO,KACPV,OAAQ,aAGV4F,MAAO,CACLnF,KAAM,UACNyB,MAAO,sBACPD,KACE,iFACFvB,MAAO,KACPV,OAAQ,aAGV6F,MAAO,CACLpF,KAAM,eACNyB,MAAO,uBACPD,KACE,qGACFvB,MAAO,KACPV,OAAQ,eAGV8F,MAAO,CACLrF,KAAM,YACNyB,MAAO,mBACPD,KACE,kGACFvB,MAAO,KACPV,OAAQ,aAGV+F,MAAO,CACLtF,KAAM,YACNyB,MAAO,mBACPD,KACE,2EACFvB,MAAO,KACPV,OAAQ,aAGVgG,MAAO,CACLvF,KAAM,kBACNyB,MAAO,qBACPD,KACE,0GACFvB,MAAO,KACPV,OAAQ,aAGViG,MAAO,CACLxF,KAAM,UACNyB,MAAO,sBACPD,KAAM,oEACNvB,MAAO,KACPV,OAAQ,aAGVkG,MAAO,CACLzF,KAAM,UACNyB,MAAO,sBACPD,KACE,sFACFvB,MAAO,IACPV,OAAQ,aAGVmG,MAAO,CACL1F,KAAM,eACNyB,MAAO,qBACPD,KACE,8FACFvB,MAAO,KACPV,OAAQ,cC3ENoG,E,4JAYJ,WAAU,IAAD,OACP,EAA6CrF,KAAK5C,MAAMkI,QAAhDnE,EAAR,EAAQA,MAAOzB,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,MAAOuB,EAA5B,EAA4BA,KACtBlC,EAAyB,cAD/B,EAAkCC,OAElC,OACE,qBAAIvB,UAAU,YAAd,UACE,qBAAK6H,IAAKpE,EAAOqE,IAAK9F,IACtB,qBAAIhC,UAAU,YAAd,UACGgC,EACD,sBAAMhC,UAAU,QAAhB,SAAyBlB,EAAYmD,QAEvC,4BAAIuB,IACJ,wBACEuE,UAAWzG,EACXd,QAAS,kBAAM,EAAKd,MAAMsI,WAAW,EAAKtI,MAAM2E,QAFlD,SAIG/C,EAAc,eAAiB,qB,GA3BvBqB,IAAMC,WAkCV+E,IC7BTM,E,4MACJtC,MAAQ,CACNxE,OAAQ,GACRE,MAAO,I,EAiCTqC,QAAU,SAAAxC,GAER,IAAMC,EAAM,eAAQ,EAAKwE,MAAMxE,QAE/BA,EAAO,OAAD,OAAQ+G,KAAKC,QAAWjH,EAE9B,EAAKsF,SAAS,CAAErF,Y,EAGlBiD,WAAa,SAACnD,EAAKkD,GAEjB,IAAMhD,EAAM,eAAQ,EAAKwE,MAAMxE,QAE/BA,EAAOF,GAAOkD,EAEd,EAAKqC,SAAS,CAAErF,Y,EAGlBmD,WAAa,SAACrD,GAEZ,IAAME,EAAM,eAAQ,EAAKwE,MAAMxE,QAE/BA,EAAOF,GAAO,KAEd,EAAKuF,SAAS,CAAErF,Y,EAGlB8F,iBAAmB,WACjB,EAAKT,SAAS,CAAErF,OAAQiH,K,EAG1BJ,WAAa,SAAA/G,GAEX,IAAMI,EAAK,eAAQ,EAAKsE,MAAMtE,OAE9BA,EAAMJ,GAAOI,EAAMJ,GAAO,GAAK,EAE/B,EAAKuF,SAAS,CAAEnF,W,EAGlBa,gBAAkB,SAAAjB,GAEhB,IAAMI,EAAK,eAAQ,EAAKsE,MAAMtE,cAEvBA,EAAMJ,GAEb,EAAKuF,SAAS,CAAEnF,W,uDAxElB,WACE,IAAQgH,EAAW/F,KAAK5C,MAAM4I,MAAtBD,OAEFE,EAAkBC,aAAaC,QAAQJ,EAAOnC,SAChDqC,GACFjG,KAAKkE,SAAS,CAAEnF,MAAOqH,KAAKC,MAAMJ,KAGpCjG,KAAKwB,IAAMwB,EAAKsD,UAAL,UAAkBP,EAAOnC,QAAzB,WAA2C,CACpDC,QAAS7D,KACTqD,MAAO,a,gCAIX,WACE1B,QAAQC,IAAI5B,KAAKqD,MAAMtE,OACvBmH,aAAaK,QACXvG,KAAK5C,MAAM4I,MAAMD,OAAOnC,QACxBwC,KAAKI,UAAUxG,KAAKqD,MAAMtE,U,kCAI9B,WACEiE,EAAKyD,cAAczG,KAAKwB,O,oBAoD1B,WAAU,IAAD,OACP,OACE,sBAAK9D,UAAU,mBAAf,UACE,sBAAKA,UAAU,OAAf,UACE,cAACa,EAAD,CAAQC,QAAQ,yBAChB,oBAAId,UAAU,SAAd,SACGoC,OAAOC,KAAKC,KAAKqD,MAAMxE,QAAQuB,KAAI,SAAAzB,GAAG,OACrC,cAAC,EAAD,CAEEoD,MAAOpD,EACP2G,QAAS,EAAKjC,MAAMxE,OAAOF,GAC3B+G,WAAY,EAAKA,YAHZ/G,WAQb,cAAC,EAAD,CAAOE,OAAQmB,KAAKqD,MAAMxE,OAAQE,MAAOiB,KAAKqD,MAAMtE,MACpDa,gBAAiBI,KAAKJ,kBACtB,cAAC,EAAD,CACEwB,QAASpB,KAAKoB,QACdU,WAAY9B,KAAK8B,WACjBE,WAAYhC,KAAKgC,WACjB2C,iBAAkB3E,KAAK2E,iBACvB9F,OAAQmB,KAAKqD,MAAMxE,OACnB+E,QAAS5D,KAAK5C,MAAM4I,MAAMD,OAAOnC,iB,GA7GzBvD,IAAMC,WAoHTqF,IC3HA,SAASe,IACpB,OACI,8BACI,+CCCG,SAASC,IACpB,OACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIpH,UAAWqH,IACjC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,kBAAkBpH,UAAWkG,IAC/C,cAAC,IAAD,CAAOlG,UAAWiH,S,MCNlCK,iBAAO,cAACJ,EAAD,IAAYK,SAASC,cAAc,Y","file":"static/js/main.f803b42c.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport { getFunName } from \"../helpers\";\nimport { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nfunction StorePicker(props) {\n\n    const [input, setInput] = useState(getFunName())\n\n    return (\n        <form className=\"store-selector\">\n            <h2>Please Enter A Store</h2>\n            <input type=\"text\" placeholder=\"Store Name\" defaultValue={input} onChange={(evt) => setInput(evt.target.value)}/>\n            <button type=\"submit\" onClick={(e) => {\n                e.preventDefault();\n                props.history.push(`/store/${input}`);\n            }}>Visit Store</button>\n        </form>\n    )\n};\n\nStorePicker.propTypes = {\n    history: PropTypes.object.isRequired\n}\n\nexport default withRouter(StorePicker);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Header(props) {\n    return (\n        <header className=\"top\">\n            <h1>\n                Catch\n                <span className=\"ofThe\">\n                    <span className=\"of\">of</span>\n                    <span className=\"the\">The</span>\n                </span>\n                Day\n            </h1>\n            <h3 className=\"tagline\">\n                <span>{props.tagline}</span>\n            </h3>\n        </header>\n    )\n};\n\nHeader.propTypes = {\n    tagline: PropTypes.string.isRequired\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func\n  };\n  renderOrder = key => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === \"available\";\n    const transitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout: { enter: 500, exit: 500 }\n    };\n    // Make sure the fish is loaded before we continue!\n    if (!fish) return null;\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry {fish ? fish.name : \"fish\"} is no longer available\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddFishForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func\n  }\n\n  createFish = event => {\n    // 1.  stop the form from submitting\n    event.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addFish(fish);\n    // refresh the form\n    event.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input\n          name=\"price\"\n          ref={this.priceRef}\n          type=\"text\"\n          placeholder=\"Price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n        <input\n          name=\"image\"\n          ref={this.imageRef}\n          type=\"text\"\n          placeholder=\"Image\"\n        />\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditFishForm extends React.Component {\n    static propTypes = {\n        fish: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number, \n        }),\n        index: PropTypes.string,\n        updateFish: PropTypes.func\n    }\n\n  handleChange = event => {\n    console.log(event.currentTarget.value);\n    // update that fish\n    // 1. Take a copy of the curernt fish\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value\n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          type=\"text\"\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\"\n\nconst Login = (props) => (\n    <nav className=\"login\">\n        <h2>Inventory Login</h2>\n        <p>Sign in to manage your store's inventory.</p>\n        <button className=\"github\" onClick={() => props.authenticate('Github')}>\n            Log In With Github\n        </button>\n        <button className=\"facebook\" onClick={() => props.authenticate('Facebook')}>\n            Log In With Facebook\n        </button>\n    </nav>\n\n);\n\nLogin.propTypes = {\n    authenticate: PropTypes.func.isRequired\n}\n\nexport default Login;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\nrequire('dotenv').config()\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: \"catch-of-the-day-laurel.firebaseapp.com\",\n    databaseURL: \"https://catch-of-the-day-laurel-default-rtdb.firebaseio.com\",\n    projectId: \"catch-of-the-day-laurel\",\n    storageBucket: \"catch-of-the-day-laurel.appspot.com\",\n    messagingSenderId: \"39411524549\",\n    appId: \"1:39411524549:web:d1c53737203fde3bbca1ac\"\n  })\n\n  const base = Rebase.createClass(firebaseApp.database());\n\n  // this is a named export\n  export { firebaseApp }\n\n  // this is a default export\n  export default base;\n","import React from \"react\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n\n    static propTypes = {\n        fishes: PropTypes.object,\n        updateFish: PropTypes.func,\n        deleteFish: PropTypes.func,\n        loadSampleFishes: PropTypes.func,\n    };\n\n    state = {\n        uid: null,\n        owner: null\n      };\n\n      componentDidMount() {\n        //when we reload page it will check if we are logged in\n        firebase.auth().onAuthStateChanged(user => {\n            if(user) {\n                this.authHandler({ user })\n            }\n        })\n      }\n\n    authHandler = async (authData) => {\n        //look up current store in firebase db\n        const store = await base.fetch(this.props.storeId, { context: this })\n        // claim it if no owner\n        if (!store.owner) {\n            //save as our own\n            await base.post(`${this.props.storeId}/owner`, {\n                data: authData.user.uid\n            })\n        }\n        // set the state of inventory component to reflect current user\n        this.setState({\n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid\n        })\n    };\n\n    authenticate = provider => {\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp\n            .auth()\n            .signInWithPopup(authProvider)\n            .then(this.authHandler);\n    };\n\n    logout = async () => {\n        console.log('Logging out!');\n        await firebase.auth().aignOut();\n        this.setState({ uid: null })\n    }\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out!</button>\n    //check if logged in\n    if (!this.state.uid) {\n        return <Login authenticate={this.authenticate}/>\n    }\n    //check if they are not owner of store\n    if (this.state.uid !== this.state.owner) {\n        return (\n            <div>\n                <p>Sorry you are not the owner!</p>\n                {logout}\n\n            </div>\n        )\n    }\n    //if they are owner, render the inventory \n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\n\nclass Fish extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func,\n    index: PropTypes.string\n  };\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === \"available\";\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button\n          disabled={!isAvailable}\n          onClick={() => this.props.addToOrder(this.props.index)}\n        >\n          {isAvailable ? \"Add To Order\" : \"Sold Out!\"}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\nimport PropTypes from \"prop-types\";\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {}\n  };\n\n  static propTypes = {\n    match: PropTypes.object.isRequired\n  }\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    // first reinstate our localStorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\"\n    });\n  }\n\n  componentDidUpdate() {\n    console.log(this.state.order);\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = fish => {\n    // 1. Take a copy of the existing state\n    const fishes = { ...this.state.fishes };\n    // 2. Add our new fish to that fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    // 3. Set the new fishes object to state\n    this.setState({ fishes });\n  };\n\n  updateFish = (key, updatedFish) => {\n    // 1. Take a copy of the current state\n    const fishes = { ...this.state.fishes };\n    // 2. Update that state\n    fishes[key] = updatedFish;\n    // 3. Set that to state\n    this.setState({ fishes });\n  };\n\n  deleteFish = (key) => {\n    //take a copy of state\n    const fishes = { ...this.state.fishes }\n    //update the state\n    fishes[key] = null;\n    // update state\n    this.setState({ fishes });\n  }\n\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  };\n\n  addToOrder = key => {\n    // 1. take a copy of state\n    const order = { ...this.state.order };\n    // 2. Either add to the order, or update the number in our order\n    order[key] = order[key] + 1 || 1;\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  };\n\n  removeFromOrder = key => {\n    //take a copy of state\n    const order = { ...this.state.order }\n    //update the state\n    delete order[key];\n    // update state\n    this.setState({ order });\n  };\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order fishes={this.state.fishes} order={this.state.order} \n        removeFromOrder={this.removeFromOrder}/>\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nexport default function NotFound() {\n    return (\n        <div>\n            <h2>Not Found!!</h2>\n        </div>\n    )\n};\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nexport default function Router() {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route exact path=\"/\" component={StorePicker}/>\n                <Route exact path=\"/store/:storeId\" component={App}/>\n                <Route component={NotFound}/>\n            </Switch>\n        </BrowserRouter>\n    )\n};\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Router from \"./components/Router\";\nimport './css/style.css'\n\n\nrender(<Router />, document.querySelector(\"#main\"));\n"],"sourceRoot":""}